import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the prims function below.
    static int prims(int n, int[][] edges, int start) {
        ArrayList<HashMap<Integer, Integer>>al = new ArrayList<>();
        for(int i = 0; i <= n; i++)
            al.add(new HashMap<Integer, Integer>());
        for(int i = 0; i < edges.length; i++){
            int src = edges[i][0];
            int dest = edges[i][1];
            int wt = edges[i][2];
            al.get(src).put(dest, wt);
            al.get(dest).put(src, wt);
        }
        boolean visited[] = new boolean[n+1];
        int dist[] = new int[n+1];
        for(int i = 0; i <= n; i++)
            dist[i] = Integer.MAX_VALUE;
        dist[start] = 0;
        for(int i = 0; i < n-1; i++){
            // pick min
            int min = Integer.MAX_VALUE;
            int minInd = 0;
            for(int j = 1; j <= n; j++){
                if( !visited[j] && min > dist[j]){
                    min = dist[j];
                    minInd = j;
                }    
            }
            // set dist
            visited[minInd] = true;
            for(int k:al.get(minInd).keySet()){
                if(!visited[k] && al.get(minInd).get(k) < dist[k] ){
                    dist[k] = al.get(minInd).get(k);
                }  
            }
        }
        int sum = 0;
        for(int i = 1; i <= n; i++){
            if(dist[i]!=Integer.MAX_VALUE)
                sum += dist[i];
        }
        return sum;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] nm = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nm[0]);

        int m = Integer.parseInt(nm[1]);

        int[][] edges = new int[m][3];

        for (int i = 0; i < m; i++) {
            String[] edgesRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 3; j++) {
                int edgesItem = Integer.parseInt(edgesRowItems[j]);
                edges[i][j] = edgesItem;
            }
        }

        int start = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int result = prims(n, edges, start);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}

